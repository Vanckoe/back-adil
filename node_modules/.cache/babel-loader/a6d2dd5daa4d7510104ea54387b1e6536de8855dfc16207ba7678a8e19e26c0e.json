{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"text-center\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"ID пользователя: \" + _toDisplayString($data.post.userId), 1 /* TEXT */), _createElementVNode(\"p\", null, \"ID поста: \" + _toDisplayString($data.post.id), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Заголовок поста: \" + _toDisplayString($data.post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Контент поста: \" + _toDisplayString($data.post.body), 1 /* TEXT */), $data.userId > 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Пользователь с ID > 1\")) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","post","userId","id","title","body","_hoisted_3"],"sources":["C:\\Users\\Vanckoe\\OneDrive\\Documents\\work\\Noncomercial\\lara\\crud\\src\\components\\posts\\PostData.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"text-center\">\r\n      <p>ID пользователя: {{post.userId}}</p>\r\n      <p>ID поста: {{post.id}}</p>\r\n      <p>Заголовок поста: {{post.title}}</p>\r\n      <p>Контент поста: {{post.body}}</p>\r\n      <div v-if=\"userId > 1\">Пользователь с ID > 1</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PostData\",\r\n  data(){\r\n    return {\r\n      baseUrl: 'https://jsonplaceholder.typicode.com/posts/',\r\n      post : {},\r\n      id: this.$route.params.id,\r\n      userId: this.$route.params.userId\r\n    }\r\n  },\r\n  async created() {\r\n    console.log(this.$route)\r\n    console.log(this.baseUrl + this.id)\r\n    try {\r\n      const {status, data} = await axios.get(this.baseUrl + this.id);\r\n      if (status === 200) {\r\n        this.post = data\r\n      }\r\n    } catch (e) {\r\n      console.log(e.response)\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAa;;;;;uBAD1BC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAMM,OANNC,UAMM,GALJD,mBAAA,CAAuC,WAApC,mBAAiB,GAAAE,gBAAA,CAAEC,KAAA,CAAAC,IAAI,CAACC,MAAM,kBACjCL,mBAAA,CAA4B,WAAzB,YAAU,GAAAE,gBAAA,CAAEC,KAAA,CAAAC,IAAI,CAACE,EAAE,kBACtBN,mBAAA,CAAsC,WAAnC,mBAAiB,GAAAE,gBAAA,CAAEC,KAAA,CAAAC,IAAI,CAACG,KAAK,kBAChCP,mBAAA,CAAmC,WAAhC,iBAAe,GAAAE,gBAAA,CAAEC,KAAA,CAAAC,IAAI,CAACI,IAAI,kBAClBL,KAAA,CAAAE,MAAM,Q,cAAjBP,mBAAA,CAAkD,OAAAW,UAAA,EAA3B,uBAAqB,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}