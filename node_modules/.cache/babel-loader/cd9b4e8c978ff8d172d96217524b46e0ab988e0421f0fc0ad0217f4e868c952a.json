{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Регистрация\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"input\",\n  for: \"name\"\n}, \"Имя:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"input\",\n  for: \"email\"\n}, \"Email:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"input\",\n  for: \"password\"\n}, \"Пароль:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Зарегистрироваться\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.registerUser && $options.registerUser(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    class: \"input\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    type: \"text\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    class: \"input\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    type: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    class: \"input\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    type: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _hoisted_6], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","registerUser","_hoisted_3","id","$data","name","$event","required","_hoisted_4","email","_hoisted_5","password","_hoisted_6"],"sources":["C:\\Users\\Vanckoe\\OneDrive\\Documents\\work\\Noncomercial\\lara\\crud\\src\\views\\UserRegister.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 >Регистрация</h1>\r\n    <form @submit.prevent=\"registerUser\">\r\n      <div>\r\n        <label class=\"input\" for=\"name\">Имя:</label>\r\n        <input class=\"input\" id=\"name\" v-model=\"name\" type=\"text\" required>\r\n      </div>\r\n      <div>\r\n        <label class=\"input\" for=\"email\">Email:</label>\r\n        <input class=\"input\" id=\"email\" v-model=\"email\" type=\"email\" required>\r\n      </div>\r\n      <div>\r\n        <label class=\"input\" for=\"password\">Пароль:</label>\r\n        <input class=\"input\" id=\"password\" v-model=\"password\" type=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\">Зарегистрироваться</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n<style>\r\n  .container{\r\n    width: 60%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n  }\r\n  .input{\r\n    margin-top: 20px;\r\n  }\r\n\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n  },\r\n  methods: {\r\n    registerUser() {\r\n      const userData = {\r\n        name: this.name,\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n      this.$http.post('/register', userData)\r\n        .then(response => {\r\n          \r\n          localStorage.setItem('authToken', response.data.token); \r\n          this.$router.push('/category'); \r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n          \r\n        });\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAqB,YAAhB,aAAW;gCAGZA,mBAAA,CAA4C;EAArCD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;GAAO,MAAI;gCAIpCD,mBAAA,CAA+C;EAAxCD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;GAAQ,QAAM;gCAIvCD,mBAAA,CAAmD;EAA5CD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;GAAW,SAAO;gCAG7CD,mBAAA,CAAiD;EAAzCE,IAAI,EAAC;AAAQ,GAAC,oBAAkB;;;uBAf5CC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,UAAqB,EACrBL,mBAAA,CAcO;IAdAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACjCT,mBAAA,CAGM,cAFJY,UAA4C,E,gBAC5CZ,mBAAA,CAAmE;IAA5DD,KAAK,EAAC,OAAO;IAACc,EAAE,EAAC,MAAM;+DAAUC,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEd,IAAI,EAAC,MAAM;IAACe,QAAQ,EAAR;iDAAlBH,KAAA,CAAAC,IAAI,E,KAE9Cf,mBAAA,CAGM,cAFJkB,UAA+C,E,gBAC/ClB,mBAAA,CAAsE;IAA/DD,KAAK,EAAC,OAAO;IAACc,EAAE,EAAC,OAAO;+DAAUC,KAAA,CAAAK,KAAK,GAAAH,MAAA;IAAEd,IAAI,EAAC,OAAO;IAACe,QAAQ,EAAR;iDAApBH,KAAA,CAAAK,KAAK,E,KAEhDnB,mBAAA,CAGM,cAFJoB,UAAmD,E,gBACnDpB,mBAAA,CAA+E;IAAxED,KAAK,EAAC,OAAO;IAACc,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAO,QAAQ,GAAAL,MAAA;IAAEd,IAAI,EAAC,UAAU;IAACe,QAAQ,EAAR;iDAA1BH,KAAA,CAAAO,QAAQ,E,KAEtDC,UAAiD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}