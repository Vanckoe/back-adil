{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Посты преподавателей университета международного бизнеса\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"table table-dark table-striped\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"ID пользователя\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"ID поста\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Заголовок поста\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Контент поста\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RouterLink = _resolveComponent(\"RouterLink\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.postsComputed, (post, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(post.userId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(post.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(post.title), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createTextVNode(_toDisplayString(post.body) + \" \", 1 /* TEXT */), _createVNode(_component_RouterLink, {\n      to: 'post/' + post.id + '/user/' + post.userId\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"...\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\"    <ul>\"), _createCommentVNode(\"      <li v-for=\\\"(post, index) in postsComputed\\\" :key=\\\"index\\\">id: {{ post.id }}, title: {{ post.title }}\"), _createCommentVNode(\"        <RouterLink :to=\\\"'post/' + post.id \\\">перейти</RouterLink>\"), _createCommentVNode(\"      </li>\"), _createCommentVNode(\"    </ul>\")]);\n}","map":{"version":3,"names":["_createElementVNode","class","scope","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","postsComputed","post","index","key","_toDisplayString","userId","id","title","body","_createVNode","_component_RouterLink","to","_createCommentVNode"],"sources":["C:\\Users\\Vanckoe\\OneDrive\\Documents\\work\\Noncomercial\\lara\\crud\\src\\views\\PostsData.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Посты преподавателей университета международного бизнеса</h2>\r\n    <table class=\"table table-dark table-striped\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\">ID пользователя</th>\r\n        <th scope=\"col\">ID поста</th>\r\n        <th scope=\"col\">Заголовок поста</th>\r\n        <th scope=\"col\">Контент поста</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(post, index) in postsComputed\" :key=\"index\">\r\n        <td>{{post.userId}}</td>\r\n        <td>{{post.id}}</td>\r\n        <td>{{ post.title }}</td>\r\n        <td>{{post.body}} <RouterLink :to=\"'post/' + post.id + '/user/' + post.userId\">...</RouterLink></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n<!--    <ul>-->\r\n<!--      <li v-for=\"(post, index) in postsComputed\" :key=\"index\">id: {{ post.id }}, title: {{ post.title }}-->\r\n<!--        <RouterLink :to=\"'post/' + post.id \">перейти</RouterLink>-->\r\n<!--      </li>-->\r\n<!--    </ul>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PostsData\",\r\n  data() {\r\n    return {\r\n      text: 'some text',\r\n      baseUrl: 'https://jsonplaceholder.typicode.com/posts/',\r\n      posts: [],\r\n      countBeforeUpdate: 0,\r\n      countUpdated: 0\r\n    }\r\n  },\r\n  methods: {},\r\n  beforeCreate() {\r\n    console.log(this.text, 'beforeCreate')\r\n  },\r\n  async created() {\r\n    try {\r\n      const {status, data} = await axios.get(this.baseUrl);\r\n      if (status === 200) {\r\n        this.posts = data\r\n      }\r\n    } catch (e) {\r\n      console.log(e.response)\r\n    }\r\n  },\r\n  beforeMount() {\r\n    console.log(this.text, 'beforeMount')\r\n  },\r\n  // mounted() {\r\n  //   setTimeout(() => {\r\n  //     this.posts.push({id: 4, title: 'Post4'})\r\n  //   }, 10000)\r\n  // },\r\n  // beforeUpdate() {\r\n  //   console.log(this.countBeforeUpdate += 1, 'beforeUpdate')\r\n  //   this.posts.splice(0, 1)\r\n  // },\r\n  // updated() {\r\n  //   console.log(this.countUpdated +=1, 'updated')\r\n  // },\r\n  beforeUnmount() {\r\n    this.posts = []\r\n    console.log('beforeUnmount')\r\n  },\r\n  unmounted() {\r\n    console.log('unmounted')\r\n  },\r\n\r\n  computed: {\r\n    postsComputed() {\r\n      let newPosts = []\r\n      for (let key in this.posts) {\r\n        newPosts[key] = {id: this.posts[key].id, title: this.posts[key].title,\r\n          url: this.baseUrl + this.posts[key].id,\r\n          body: this.posts[key].body.slice(0,20),\r\n          userId: this.posts[key].userId\r\n        }\r\n      }\r\n      return newPosts\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";gCAEIA,mBAAA,CAAiE,YAA7D,0DAAwD;;EACrDC,KAAK,EAAC;AAAgC;gCAC3CD,mBAAA,CAOQ,gB,aANRA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAoC;EAAhCE,KAAK,EAAC;AAAK,GAAC,iBAAe,G,aAC/BF,mBAAA,CAA6B;EAAzBE,KAAK,EAAC;AAAK,GAAC,UAAQ,G,aACxBF,mBAAA,CAAoC;EAAhCE,KAAK,EAAC;AAAK,GAAC,iBAAe,G,aAC/BF,mBAAA,CAAkC;EAA9BE,KAAK,EAAC;AAAK,GAAC,eAAa,E;;;;uBARnCC,mBAAA,CAyBM,cAxBJC,UAAiE,EACjEJ,mBAAA,CAiBQ,SAjBRK,UAiBQ,GAhBNC,UAOQ,EACRN,mBAAA,CAOQ,iB,kBANRG,mBAAA,CAKKI,SAAA,QAAAC,WAAA,CALuBC,QAAA,CAAAC,aAAa,GAA7BC,IAAI,EAAEC,KAAK;yBAAvBT,mBAAA,CAKK;MALuCU,GAAG,EAAED;IAAK,IACpDZ,mBAAA,CAAwB,YAAAc,gBAAA,CAAlBH,IAAI,CAACI,MAAM,kBACjBf,mBAAA,CAAoB,YAAAc,gBAAA,CAAdH,IAAI,CAACK,EAAE,kBACbhB,mBAAA,CAAyB,YAAAc,gBAAA,CAAlBH,IAAI,CAACM,KAAK,kBACjBjB,mBAAA,CAAoG,a,kCAA9FW,IAAI,CAACO,IAAI,IAAE,GAAC,iBAAAC,YAAA,CAA6EC,qBAAA;MAAhEC,EAAE,YAAYV,IAAI,CAACK,EAAE,cAAcL,IAAI,CAACI;;wBAAQ,MAAG,C,iBAAH,KAAG,E;;;sCAI1FO,mBAAA,YAAe,EACfA,mBAAA,gHAA+G,EAC/GA,mBAAA,uEAAwE,EACxEA,mBAAA,eAAkB,EAClBA,mBAAA,aAAgB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}