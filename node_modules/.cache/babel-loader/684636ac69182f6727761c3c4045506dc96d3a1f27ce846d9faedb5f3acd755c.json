{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport httpClient from \"../../../services/http.service\";\nconst productsdata = {\n  namespaced: true,\n  state: {\n    products: []\n  },\n  actions: {\n    async GET_PRODUCTS({\n      commit\n    }) {\n      try {\n        const {\n          status,\n          data\n        } = await httpClient.get('products');\n        if (status === 200 && data.products) {\n          commit('SET_PRODUCTS', data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    },\n    async CREATE_PRODUCT({\n      commit\n    }, productData) {\n      try {\n        const response = await fetch('https://dummyjson.com/products/add', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(productData)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          commit('ADD_PRODUCT', data);\n        } else {\n          console.error(\"Error creating product:\", data);\n          throw new Error(data.message || \"Error creating product\");\n        }\n      } catch (error) {\n        console.error(\"Error creating product:\", error);\n      }\n    },\n    async UPDATE_PRODUCT_BY_ID({\n      commit\n    }, {\n      id,\n      updatedProductData\n    }) {\n      try {\n        const response = await fetch(`https://dummyjson.com/products/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedProductData)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          commit('UPDATE_PRODUCT_BY_ID', {\n            id,\n            updatedProductData: data\n          });\n        } else {\n          console.error(\"Error updating product:\", data);\n          throw new Error(data.message || \"Error updating product\");\n        }\n      } catch (error) {\n        console.error(\"Error updating product:\", error);\n      }\n    },\n    async DELETE_PRODUCT({\n      commit\n    }, productId) {\n      try {\n        const response = await httpClient.delete(`products/${productId}`);\n        if (response.status === 200) {\n          commit('REMOVE_PRODUCT', productId);\n        }\n      } catch (error) {\n        console.error(\"Error deleting product:\", error);\n      }\n    }\n  },\n  mutations: {\n    SET_PRODUCTS(state, backendData) {\n      state.products = backendData.products || [];\n    },\n    ADD_PRODUCT(state, newProduct) {\n      state.products.push(newProduct);\n    },\n    UPDATE_PRODUCT_BY_ID(state, {\n      id,\n      updatedProductData\n    }) {\n      const productIndex = state.products.findIndex(p => p.id === id);\n      if (productIndex !== -1) {\n        state.products[productIndex] = updatedProductData;\n      }\n    },\n    REMOVE_PRODUCT(state, id) {\n      const productIndex = state.products.findIndex(p => p.id === id);\n      if (productIndex !== -1) {\n        state.products.splice(productIndex, 1);\n      }\n    }\n  }\n};\nexport default productsdata;","map":{"version":3,"names":["httpClient","productsdata","namespaced","state","products","actions","GET_PRODUCTS","commit","status","data","get","error","console","CREATE_PRODUCT","productData","response","fetch","method","headers","body","JSON","stringify","json","ok","Error","message","UPDATE_PRODUCT_BY_ID","id","updatedProductData","DELETE_PRODUCT","productId","delete","mutations","SET_PRODUCTS","backendData","ADD_PRODUCT","newProduct","push","productIndex","findIndex","p","REMOVE_PRODUCT","splice"],"sources":["C:/Users/Vanckoe/OneDrive/Documents/work/Noncomercial/lara/crud/src/store/modules/products/productsdata.js"],"sourcesContent":["import httpClient from \"../../../services/http.service\";\r\n\r\nconst productsdata = {\r\n    namespaced: true,\r\n    state: {\r\n        products: [],\r\n    },\r\n    actions: {\r\n        async GET_PRODUCTS({ commit }) {\r\n            try {\r\n                const { status, data } = await httpClient.get('products');\r\n                if (status === 200 && data.products) {  \r\n                    commit('SET_PRODUCTS', data);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching products:\", error);\r\n            }\r\n        },\r\n        async CREATE_PRODUCT({ commit }, productData) {\r\n            try {\r\n                const response = await fetch('https://dummyjson.com/products/add', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(productData)\r\n                });\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    commit('ADD_PRODUCT', data);\r\n                } else {\r\n                    console.error(\"Error creating product:\", data);\r\n                    throw new Error(data.message || \"Error creating product\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error creating product:\", error);\r\n            }\r\n        },\r\n        async UPDATE_PRODUCT_BY_ID({ commit }, { id, updatedProductData }) {\r\n            try {\r\n                const response = await fetch(`https://dummyjson.com/products/${id}`, {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(updatedProductData)\r\n                });\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    commit('UPDATE_PRODUCT_BY_ID', { id, updatedProductData: data });\r\n                } else {\r\n                    console.error(\"Error updating product:\", data);\r\n                    throw new Error(data.message || \"Error updating product\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error updating product:\", error);\r\n            }\r\n        },\r\n        async DELETE_PRODUCT({ commit }, productId) {\r\n            try {\r\n              const response = await httpClient.delete(`products/${productId}`);\r\n              if (response.status === 200) {\r\n                commit('REMOVE_PRODUCT', productId); \r\n              }\r\n            } catch (error) {\r\n              console.error(\"Error deleting product:\", error);\r\n            }\r\n          },\r\n    },\r\n    mutations: {\r\n        SET_PRODUCTS(state, backendData) {\r\n            state.products = backendData.products || [];  \r\n        },\r\n        ADD_PRODUCT(state, newProduct) {\r\n            state.products.push(newProduct);\r\n        },\r\n        UPDATE_PRODUCT_BY_ID(state, { id, updatedProductData }) {\r\n            const productIndex = state.products.findIndex(p => p.id === id);\r\n            if (productIndex !== -1) {\r\n                state.products[productIndex] = updatedProductData;\r\n            }\r\n        },\r\n        REMOVE_PRODUCT(state, id) {\r\n            const productIndex = state.products.findIndex(p => p.id === id);\r\n            if (productIndex !== -1) {\r\n                state.products.splice(productIndex, 1);\r\n            }\r\n        },\r\n    },\r\n};\r\n\r\nexport default productsdata;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}